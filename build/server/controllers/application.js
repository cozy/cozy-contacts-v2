// Generated by CoffeeScript 1.9.3
var Config, Contact, Tag, WebDavAccount, async, cozydb, fs, getImports, log, path;

fs = require('fs');

path = require('path');

Contact = require('../models/contact');

Config = require('../models/config');

Tag = require('../models/tag');

WebDavAccount = require('../models/webdavaccount');

async = require('async');

cozydb = require('cozydb');

log = require('printit')({
  prefix: 'contact:application'
});

getImports = function(callback) {
  return async.parallel([
    Config.getInstance, function(cb) {
      return cozydb.api.getCozyInstance(cb);
    }, function(cb) {
      return WebDavAccount.first(cb);
    }
  ], function(err, res) {
    var config, instance, locale, webDavAccount;
    config = res[0], instance = res[1], webDavAccount = res[2];
    locale = (instance != null ? instance.locale : void 0) || 'en';
    if (webDavAccount != null) {
      webDavAccount.domain = (instance != null ? instance.domain : void 0) || '';
    }
    return callback(null, {
      config: config,
      locale: locale,
      webDavAccount: webDavAccount,
      env: process.env.NODE_ENV
    });
  });
};

module.exports = {
  index: function(req, res) {
    return getImports(function(err, imports) {
      if (err) {
        return res.error(500, 'An error occured', err);
      }
      return res.render("index", {
        imports: JSON.stringify(imports),
        locale: imports.locale
      });
    });
  },
  setConfig: function(req, res) {
    return Config.set(req.body, function(err, config) {
      if (err) {
        return res.error(500, 'An error occured', err);
      }
      return res.send(config);
    });
  },
  logClient: function(req, res) {
    var data, error, type;
    data = req.body;
    error = data.error;
    delete data.error;
    type = data.type === 'log' ? 'debug' : data.type;
    log[type](data);
    log[type](error.msg);
    if (error.stack) {
      log[type](error.stack);
    }
    return res.status(204).send();
  }
};
